import React, { useState } from 'react';

const steps = [
    { label: '1.5 th√°ng', subLabel: 'IELTS 0.0 - 2.0', color: '#E74C3C' },
    { label: '2 th√°ng', subLabel: 'IELTS 2.0 - 3.0', color: '#F39C12' },
    { label: '2.5 th√°ng', subLabel: 'IELTS 3.0 - 4.0', color: '#2980B9' },
    { label: '2.5 th√°ng', subLabel: 'IELTS 4.0 - 5.0', color: '#3498DB' },
    { label: '2.5 th√°ng', subLabel: 'IELTS 5.0 - 6.0', color: '#9B59B6' },
    { label: '1 th√°ng', subLabel: 'IELTS 6.0 - 6.5', color: '#8E44AD' },
    { label: '2.5 th√°ng', subLabel: 'IELTS 6.5 - 7.0', color: '#FF69B4' },
    { label: '2 th√°ng', subLabel: 'IELTS 7.0 - 7.5+', color: '#2ECC71' },
];

const stepContents = [
    {
        duration: "1.5 th√°ng",
        target: [
            "Ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu ho√†n to√†n",
            "Ch∆∞a bi·∫øt g√¨ v·ªÅ IELTS",
            "Mu·ªën l√†m quen v·ªõi k·ªπ nƒÉng nghe ‚Äì n√≥i c∆° b·∫£n"
        ],
        result: [
            "ƒê·∫°t IELTS 0.0 - 2.0",
            "Hi·ªÉu c·∫•u tr√∫c b√†i thi c∆° b·∫£n",
            "X√¢y d·ª±ng n·ªÅn t·∫£ng t·ª´ v·ª±ng"
        ]
    },
    {
        duration: "2 th√°ng",
        target: [
            "Ng∆∞·ªùi ƒë√£ h·ªçc c∆° b·∫£n",
            "Mu·ªën c·∫£i thi·ªán k·ªπ nƒÉng nghe ‚Äì n√≥i",
            "C·∫ßn l√†m quen v·ªõi k·ªπ nƒÉng ƒë·ªçc c∆° b·∫£n"
        ],
        result: [
            "ƒê·∫°t IELTS 2.0 - 3.0",
            "N·∫Øm c√°c chi·∫øn l∆∞·ª£c l√†m b√†i c∆° b·∫£n",
            "TƒÉng v·ªën t·ª´ v·ª±ng v√† ng·ªØ ph√°p"
        ]
    },
    {
        duration: "2.5 th√°ng",
        target: [
            "H·ªçc sinh ƒë√£ bi·∫øt nghe ‚Äì n√≥i c∆° b·∫£n",
            "Mu·ªën ph√°t tri·ªÉn k·ªπ nƒÉng ƒë·ªçc ‚Äì vi·∫øt",
            "C·∫ßn luy·ªán t·∫≠p k·ªπ nƒÉng t·ª´ v·ª±ng n√¢ng cao"
        ],
        result: [
            "ƒê·∫°t IELTS 3.0 - 4.0",
            "C·∫£i thi·ªán t·ªëc ƒë·ªô ƒë·ªçc hi·ªÉu",
            "Vi·∫øt ƒë∆∞·ª£c ƒëo·∫°n vƒÉn ng·∫Øn c∆° b·∫£n"
        ]
    },
    {
        duration: "2.5 th√°ng",
        target: [
            "Ng∆∞·ªùi mu·ªën ƒë·∫°t 4.0 ‚Äì 5.0",
            "C·∫ßn n√¢ng cao k·ªπ nƒÉng l√†m b√†i nghe ‚Äì ƒë·ªçc",
            "Chu·∫©n b·ªã cho c√°c k·ªπ nƒÉng vi·∫øt c∆° b·∫£n"
        ],
        result: [
            "ƒê·∫°t IELTS 4.0 - 5.0",
            "Vi·∫øt ƒëo·∫°n vƒÉn 5-6 c√¢u r√µ r√†ng",
            "Nghe hi·ªÉu c√°c c√¢u ƒë∆°n gi·∫£n"
        ]
    },
    {
        duration: "2.5 th√°ng",
        target: [
            "Mu·ªën ƒë·∫°t IELTS 5.0 6.0",
            "C·∫ßn luy·ªán t·∫≠p nghe  ƒë·ªçc n√¢ng cao",
            "Mu·ªën c·∫£i thi·ªán k·ªπ nƒÉng vi·∫øt lu·∫≠n"
        ],
        result: [
            "ƒê·∫°t IELTS 5.0 - 6.0",
            "Vi·∫øt ƒë∆∞·ª£c ƒëo·∫°n vƒÉn 8-10 c√¢u",
            "ƒê·ªçc hi·ªÉu c√°c b√†i d√†i h∆°n"
        ]
    },
    {
        duration: "1 th√°ng",
        target: [
            "H·ªçc sinh ƒë√£ c√≥ n·ªÅn t·∫£ng 6.0",
            "C·∫ßn luy·ªán thi t·∫≠p trung",
            "C·∫£i thi·ªán ƒëi·ªÉm k·ªπ nƒÉng y·∫øu"
        ],
        result: [
            "ƒê·∫°t IELTS 6.0 - 6.5",
            "TƒÉng ƒëi·ªÉm nghe v√† ƒë·ªçc",
            "Vi·∫øt lu·∫≠n c∆° b·∫£n t·ªët h∆°n"
        ]
    },
    {
        duration: "2.5 th√°ng",
        target: [
            "Ng∆∞·ªùi mu·ªën ƒë·∫°t 6.5 ‚Äì 7.0",
            "C·∫ßn luy·ªán k·ªπ nƒÉng vi·∫øt n√¢ng cao",
            "C·∫£i thi·ªán ph√°t √¢m v√† ng·ªØ ph√°p"
        ],
        result: [
            "ƒê·∫°t IELTS 6.5 - 7.0",
            "Vi·∫øt ƒë∆∞·ª£c b√†i lu·∫≠n c√≥ c·∫•u tr√∫c t·ªët",
            "Nghe hi·ªÉu c√°c b√†i ph·ª©c t·∫°p"
        ]
    },
    {
        duration: "2 th√°ng",
        target: [
            "Ng∆∞·ªùi mu·ªën ƒë·∫°t 7.0 ‚Äì 7.5+",
            "C·∫ßn luy·ªán thi n√¢ng cao",
            "Mu·ªën c·∫£i thi·ªán ƒëi·ªÉm to√†n di·ªán"
        ],
        result: [
            "ƒê·∫°t IELTS 7.0 - 7.5+",
            "Vi·∫øt lu·∫≠n r√µ r√†ng, m·∫°ch l·∫°c",
            "Nghe, ƒë·ªçc, n√≥i ƒë·∫°t tr√¨nh ƒë·ªô cao"
        ]
    },
];


const StudyPathArrow: React.FC = () => {
    const [activeStep, setActiveStep] = useState<number>(0);
    const [displayStep, setDisplayStep] = useState<number>(0);
    const [isTransitioning, setIsTransitioning] = useState(false);

    const handleStepClick = (idx: number) => {
        if (idx === activeStep) return;
        setIsTransitioning(true);
        setTimeout(() => {
            setActiveStep(idx);
            setIsTransitioning(false);
        }, 300);
    };

    return (
        <div className="flex flex-col space-x-0 p-4 mt-9">
            <div className='flex flex-col justify-center items-center '>
                <h1 className='text-black text-4xl'>Chi ti·∫øt l·ªô tr√¨nh h·ªçc</h1>
                <h2 className='text-gray-400'>L·ª±a ch·ªçn kh√≥a h·ªçc theo ƒë√∫ng l·ªô tr√¨nh h·ªçc t·∫≠p v√† linh ho·∫°t th·ªùi gian h·ªçc theo nhu c·∫ßu</h2>
            </div>

            {/* Step arrow */}
            <div className='flex space-x-0 overflow-x-auto p-4 scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-200 justify-center items-center'>
                {steps.map((step, idx) => (
                    <div
                        key={idx}
                        onClick={() => handleStepClick(idx)}
                        className={`flex-none px-10 py-4 text-white font-semibold relative transition-transform duration-300 hover:translate-x-4 cursor-pointer
                            ${activeStep === idx ? 'ring-4 ring-yellow-300' : ''}`}
                        style={{
                            backgroundColor: step.color,
                            clipPath:
                                idx === 0
                                    ? 'polygon(10% 0, 100% 0, 90% 50%, 100% 100%, 10% 100%, 0 50%)'
                                    : idx === steps.length - 1
                                        ? 'polygon(10% 0, 100% 0, 90% 50%, 100% 100%, 10% 100%, 0 50%)'
                                        : 'polygon(10% 0, 100% 0, 90% 50%, 100% 100%, 10% 100%, 0 50%)',
                        }}
                    >
                        <div className="flex flex-col items-center justify-center text-center">
                            <span>{step.label}</span>
                            <span className="text-xs">{step.subLabel}</span>
                        </div>
                    </div>
                ))}
            </div>


            <div className="mt-6 flex gap-8 justify-center px-12">
                {/* üîπ C·ªôt b√™n tr√°i (ƒê·ªëi t∆∞·ª£ng h·ªçc) ‚Äî nh·ªè h∆°n */}
                <div
                    className={`flex-[0.8] p-4 rounded text-white transition-all duration-300 ease-in-out 
        ${isTransitioning ? 'opacity-0 -translate-y-4' : 'opacity-100 translate-y-0'}`}
                    style={{ backgroundColor: steps[activeStep].color }}
                >
                    <div className="text-center mb-2">
                        <h3 className="font-semibold text-2xl text-white">ƒê·ªëi t∆∞·ª£ng h·ªçc</h3>
                        <hr className="border-t border-white mt-2" />
                    </div>

                    <div className="p-5 bg-customboldWhite rounded-sm mt-4">
                        <ul className="list-none text-white">
                            {stepContents[activeStep].target.map((item, idx) => (
                                <li key={idx}>{item}</li>
                            ))}
                        </ul>
                    </div>
                </div>

                {/* üîπ C·ªôt b√™n ph·∫£i (K·∫øt qu·∫£ ƒë·∫°t ƒë∆∞·ª£c) ‚Äî l·ªõn h∆°n */}
                <div
                    className={`flex-[1.2] p-4 rounded text-white transition-all duration-300 ease-in-out 
        ${isTransitioning ? 'opacity-0 -translate-y-4' : 'opacity-100 translate-y-0'}`}
                    style={{ backgroundColor: steps[activeStep].color }}
                >
                    <div className="text-center mb-2">
                        <h3 className="font-semibold text-2xl">K·∫øt qu·∫£ ƒë·∫°t ƒë∆∞·ª£c</h3>
                    </div>
                    <hr className="border-t border-white mt-2" />

                    <div className="p-5 bg-customboldWhite rounded-sm mt-4">
                        <ul className="list-none text-white">
                            {stepContents[activeStep].result.map((item, idx) => (
                                <li key={idx}>{item}</li>
                            ))}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default StudyPathArrow;
